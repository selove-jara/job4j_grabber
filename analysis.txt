1) В первом запуске приложения мы будем сортировать слиянием, вставкой и пузырьком, использовать будем 
-XX:+UseParallelGC -Xmx12m -Xms12m -Xlog:gc:log.txt.

- Сортировка слиянием:
MergeSort Начало сортировки - 21:38:43.935721800
MergeSort Конец сортировки - 21:38:44.035453900
Время сортировка - около 100мс

- Сортировка вставкой:
InsertSort Начало сортировки - 21:38:48.710720900
InsertSort Конец сортировки - 21:38:56.722777700
Время сортировка - 8 секунд

-Сортировка пузырьком:
BubbleSort Начало сортировки - 21:39:03.207959800
BubbleSort Конец сортировки - 21:41:08.454578700
Время сортировки - 2 минуты

Наблюдения:
Pause Young - около 35 пауз, и среднее время меньше 0.5 мс
Pause Full -  4 большие паузы и среднее время около 18 секунд

Эффективно справляется с частыми небольшими паузами, но полные сборки мусора занимают
 значительное время, что может негативно сказаться на производительности приложения.
Итак как паузы происходят часто, возможно увеличение heap  помогло бы решить данную проблему


2)Пробуем другой сборщик мусора с параметрами -XX:+UseG1GC -Xmx12m -Xms12m -Xlog:gc:log.txt.

- Сортировка слиянием:
MergeSort Начало сортировки - 22:10:50.286374200
MergeSort Конец сортировки - 22:10:50.436447400
Время сортировка - около 150мс

- Сортировка вставкой:
InsertSort Начало сортировки - 22:10:59.672266500
InsertSort Конец сортировки - 22:11:06.056982200
Время сортировка - 6 секунд

-Сортировка пузырьком:
BubbleSort Начало сортировки - 22:11:19.335656
BubbleSort Конец сортировки - 22:13:17.661421100
Время сортировки - чуть больше 2-ух минут

Наблюдения:
Стоит заметить, что по сравнению с Parallel, тут пауз значительно больше, и некоторые из них долгие, такие как
[34.149s][info][gc] GC(10) Concurrent Mark Cycle 41.400ms (15 строка в логах). Да , стоит заметить, что данная пауза
не останавливает приложение, а работает параллельно и отмечает существующие объекты. Для улучшения работы , так же можно
пересмотреть код и увеличить память.

3) Запуск приложения с параметрами -XX:+UseZGC -Xmx25m -Xms25m -Xlog:gc:log.txt
Стоит заменить что heap был увеличен.


- Сортировка слиянием:
MergeSort Начало сортировки - 23:12:30.167897300
MergeSort Конец сортировки - 23:12:30.263699300
Время сортировка - около 100мс

- Сортировка вставкой:
InsertSort Начало сортировки - 23:12:35.994770200
InsertSort Конец сортировки - 23:12:42.892133900
Время сортировка - 7 секунд

-Сортировка пузырьком:
BubbleSort Начало сортировки - 23:13:01.665031100
BubbleSort Конец сортировки - 23:15:19.861868400
Время сортировки - больше 2 минут

Наблюдения:
Несмотря на увеличение размера heap и использование ZGC, все еще наблюдаются случаи Allocation Stall, 
что указывает интенсивное выделение памяти.
Использование ZGC и увеличение размера heap  положительно сказалось на производительности приложения,
 значительно уменьшив количество и продолжительность пауз на сборку мусора.